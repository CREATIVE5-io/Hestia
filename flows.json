[
    {
        "id": "9c79856d0baec4d4",
        "type": "tab",
        "label": "Hestia Example",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ffc5afacf1c17b90",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "COM37",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "115200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "c02fb88ea1f059dc",
        "type": "ui_group",
        "name": "SystemInformation",
        "tab": "5520481166c942f6",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "05a6cc0c1856e3f4",
        "type": "ui_group",
        "name": "ModuleInformation",
        "tab": "5520481166c942f6",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ef202b7ac1b9f0b",
        "type": "ui_group",
        "name": "Uplink TEXT",
        "tab": "5520481166c942f6",
        "order": 6,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f1fb0305c6ce650",
        "type": "ui_group",
        "name": "Change Modbus ID",
        "tab": "5520481166c942f6",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "869cc10d4328188b",
        "type": "ui_group",
        "name": "Downlink Data",
        "tab": "5520481166c942f6",
        "order": 7,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5520481166c942f6",
        "type": "ui_tab",
        "name": "Example Hestia",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f40e92a8532b305f",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d423818bf2656bd2",
        "type": "ui_group",
        "name": "ENTER PASSWORD",
        "tab": "5520481166c942f6",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d06a751678eaa23e",
        "type": "ui_group",
        "name": "Change Password",
        "tab": "5520481166c942f6",
        "order": 5,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f1fcf1d7777f56f4",
        "type": "modbus-flex-getter",
        "z": "9c79856d0baec4d4",
        "name": "",
        "showStatusActivities": true,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "ffc5afacf1c17b90",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1170,
        "y": 800,
        "wires": [
            [],
            [
                "41d19692119692ee",
                "131b59564ff2780f"
            ]
        ]
    },
    {
        "id": "74af9ded2b01a701",
        "type": "modbus-flex-write",
        "z": "9c79856d0baec4d4",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "ffc5afacf1c17b90",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1470,
        "y": 2380,
        "wires": [
            [],
            [
                "d06b3d6d938038ca",
                "a6eeddc95c5c54f4"
            ]
        ]
    },
    {
        "id": "de97485adf87d28b",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea60",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea60,\n    quantity: 6 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 220,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "9c6b24b900958763",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea66",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea66,\n    quantity: 5 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "a4933a7de5f4f66d",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea6b",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea6b,\n    quantity: 2 \n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 380,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "cd4282d69c04496d",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea6d",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea6d,//0,\n    quantity: 2 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 460,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "afc7c6eaca5fc541",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea6f",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea6f,//0,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 540,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "7509570370f687c9",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea70",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea70,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 620,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "4004ca86397691fb",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea71",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea71,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 700,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "0dee7bd3fc85efe2",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xea72",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xea72,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 780,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "41d19692119692ee",
        "type": "switch",
        "z": "9c79856d0baec4d4",
        "name": "",
        "property": "modbusRequest.address",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0xea60",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea66",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea6b",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea6d",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea6f",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea70",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea71",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xea72",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb00",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb08",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb13",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb15",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb17",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb1b",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb20",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xeb25",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xec60",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xec61",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf060",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf061",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf860",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf861",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf460",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0xf461",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 25,
        "x": 1450,
        "y": 800,
        "wires": [
            [
                "7ae7270c564fb565"
            ],
            [
                "5c560bbee186d341"
            ],
            [
                "0f574f180466b256"
            ],
            [
                "e374a4e402413509"
            ],
            [
                "b097b5db0d2300e3"
            ],
            [
                "e6a0ccc5b1b1ad8a"
            ],
            [
                "71770565ea7bb138"
            ],
            [
                "c7c0af58414c20c4"
            ],
            [
                "c6f5306b5d31b583"
            ],
            [
                "f759541669b13971"
            ],
            [
                "4ebbeb421a267d92"
            ],
            [
                "4c3f24adaec2f95d"
            ],
            [
                "d5d4d236dceebf51"
            ],
            [
                "e4c8374b93e6e29f"
            ],
            [
                "72707d46b873ec29"
            ],
            [
                "2671a926a5f7034f"
            ],
            [
                "5782d2466a289135"
            ],
            [
                "0ba73ea1e6725ae7"
            ],
            [
                "66d3b351525fd7bf"
            ],
            [
                "b59bf466d18f84dc"
            ],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "5c560bbee186d341",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "Model Name",
        "func": "const mn=msg.payload.buffer.toString();\nmsg.payload=mn;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 180,
        "wires": [
            [
                "0d0c675db2e408fb"
            ]
        ]
    },
    {
        "id": "7ae7270c564fb565",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn serial number",
        "func": "const sn=msg.payload.buffer.toString();\nmsg.payload=sn;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 140,
        "wires": [
            [
                "0b77546fb77f96fc"
            ]
        ]
    },
    {
        "id": "0b77546fb77f96fc",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "d": true,
        "group": "c02fb88ea1f059dc",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2160,
        "y": 140,
        "wires": []
    },
    {
        "id": "0f574f180466b256",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "mcu fw version",
        "func": "const version=msg.payload.buffer.toString();\nmsg.payload=version;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 220,
        "wires": [
            [
                "98dd67bdcf7a84fe"
            ]
        ]
    },
    {
        "id": "0d0c675db2e408fb",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Model Name",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 180,
        "wires": []
    },
    {
        "id": "98dd67bdcf7a84fe",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "FW Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 220,
        "wires": []
    },
    {
        "id": "e374a4e402413509",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "HW version",
        "func": "const version=msg.payload.buffer.toString();\nmsg.payload=version;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 260,
        "wires": [
            [
                "020c826079e69e11"
            ]
        ]
    },
    {
        "id": "020c826079e69e11",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "HW Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 260,
        "wires": []
    },
    {
        "id": "c0abcb84c186fcc1",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Modbus ID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 300,
        "wires": []
    },
    {
        "id": "b097b5db0d2300e3",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "modbus ID",
        "func": "const mid = msg.payload.data[0];\nmsg.payload=mid;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 300,
        "wires": [
            [
                "c0abcb84c186fcc1"
            ]
        ]
    },
    {
        "id": "e6a0ccc5b1b1ad8a",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "heartbeat",
        "func": "const hbt = msg.payload.data[0];\nmsg.payload=hbt;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 340,
        "wires": [
            [
                "ec298ff62e3b7dd7"
            ]
        ]
    },
    {
        "id": "ec298ff62e3b7dd7",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Heartbeat",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2140,
        "y": 340,
        "wires": []
    },
    {
        "id": "71770565ea7bb138",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn module status",
        "func": "const nms = msg.payload.data[0];\n/*\nlet ntn_dongle=flow.get(\"ntn_dongle\");\nif (nms==0x0f){\n    ntn_dongle.state.push(\"3\");\n}else{\n    flow.set(\"ntnReady\", false);\n    ntn_dongle.state.push(\"2\");\n}\nflow.set(\"ntn_dongle\",ntn_dongle);\n*/\nmsg.payload=nms;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 380,
        "wires": [
            [
                "7d3e726a342cf891",
                "7cc144d4f059ba28"
            ]
        ]
    },
    {
        "id": "7d3e726a342cf891",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 14,
        "width": 3,
        "height": 4,
        "name": "",
        "label": "NTN Module Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1990,
        "y": 420,
        "wires": []
    },
    {
        "id": "c7c0af58414c20c4",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "pcie2 module status",
        "func": "const p2ms = msg.payload.data[0];\nmsg.payload=p2ms;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 480,
        "wires": [
            [
                "f7f86e70eab6fa3d"
            ]
        ]
    },
    {
        "id": "f7f86e70eab6fa3d",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "PCIe 2 Module Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2180,
        "y": 480,
        "wires": []
    },
    {
        "id": "7cc144d4f059ba28",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "bit detail",
        "func": "const status=msg.payload;\nconst module_ready= (((status & 0x01) >0)?\"Module Ready\":\"Module not ready\");\nconst downlink_set = ((((status>>1) & 0x01) > 0) ? \"Downlink Ready\" : \"Downlink not ready\");\nconst sim_ready = ((((status>>2) & 0x01) > 0) ? \"SIM Ready\" : \"SIM not ready\");\nconst registration = ((((status >> 3) & 0x01) > 0) ? \"Registrated\" : \"Wait registration\");\nlet msg1={\"payload\":module_ready};\nlet msg2 = { \"payload\": downlink_set };\nlet msg3 = { \"payload\": sim_ready };\nlet msg4 = { \"payload\": registration };\nreturn [msg1,msg2,msg3,msg4];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 380,
        "wires": [
            [
                "9ed4cf4e51e38372"
            ],
            [
                "2ebc93089c82be1c"
            ],
            [
                "e24e9738dda93895"
            ],
            [
                "89379ff33ca1724b"
            ]
        ]
    },
    {
        "id": "9ed4cf4e51e38372",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2530,
        "y": 240,
        "wires": []
    },
    {
        "id": "2ebc93089c82be1c",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2530,
        "y": 320,
        "wires": []
    },
    {
        "id": "e24e9738dda93895",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 17,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2530,
        "y": 400,
        "wires": []
    },
    {
        "id": "89379ff33ca1724b",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "c02fb88ea1f059dc",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2530,
        "y": 480,
        "wires": []
    },
    {
        "id": "131b59564ff2780f",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 135",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 400,
        "wires": []
    },
    {
        "id": "c6f5306b5d31b583",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn imsi",
        "func": "const imsi=msg.payload.buffer.toString();\nmsg.payload=imsi;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 580,
        "wires": [
            [
                "6431fad47e5053f1"
            ]
        ]
    },
    {
        "id": "6431fad47e5053f1",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "IMSI",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2130,
        "y": 580,
        "wires": []
    },
    {
        "id": "f759541669b13971",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn software version",
        "func": "const swv=msg.payload.buffer.toString();\nmsg.payload=swv;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 620,
        "wires": [
            [
                "0a8815316fb489da"
            ]
        ]
    },
    {
        "id": "0a8815316fb489da",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "sw version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 620,
        "wires": []
    },
    {
        "id": "4ebbeb421a267d92",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn sinr",
        "func": "const sinr=msg.payload.buffer.toString();\nmsg.payload=parseInt(sinr);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "1396541a9302f53d"
            ]
        ]
    },
    {
        "id": "1396541a9302f53d",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "SINR",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2130,
        "y": 660,
        "wires": []
    },
    {
        "id": "4c3f24adaec2f95d",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn rsrp",
        "func": "const rsrp=msg.payload.buffer.toString();\nmsg.payload=parseInt(rsrp);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 700,
        "wires": [
            [
                "e54adf944e1c49d8"
            ]
        ]
    },
    {
        "id": "e54adf944e1c49d8",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "RSRP",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2130,
        "y": 700,
        "wires": []
    },
    {
        "id": "d5d4d236dceebf51",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn module tiome",
        "func": "const mt=msg.payload.buffer.toString();\nmsg.payload=mt;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 740,
        "wires": [
            [
                "d5cd0468259235c8"
            ]
        ]
    },
    {
        "id": "d5cd0468259235c8",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "module time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 740,
        "wires": []
    },
    {
        "id": "e4c8374b93e6e29f",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn gps latitude",
        "func": "const gps_lat=msg.payload.buffer.toString();\nmsg.payload=parseFloat(gps_lat);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 800,
        "wires": [
            [
                "a718cf36282929f7",
                "b24875a487a79bc0"
            ]
        ]
    },
    {
        "id": "a718cf36282929f7",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "GPS Latitude",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2150,
        "y": 780,
        "wires": []
    },
    {
        "id": "72707d46b873ec29",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn gps longitude",
        "func": "const gps_long=msg.payload.buffer.toString();\nmsg.payload=parseFloat(gps_long);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 880,
        "wires": [
            [
                "7e16edca24415394",
                "d8acf4f22f12564e"
            ]
        ]
    },
    {
        "id": "7e16edca24415394",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "GPS longitude",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2160,
        "y": 860,
        "wires": []
    },
    {
        "id": "2671a926a5f7034f",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn CSQ Classification",
        "func": "const csq=msg.payload.buffer.toString();\nmsg.payload=csq;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 940,
        "wires": [
            [
                "f10d4583dc011e02"
            ]
        ]
    },
    {
        "id": "f10d4583dc011e02",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "05a6cc0c1856e3f4",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "csq classifiction",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2160,
        "y": 940,
        "wires": []
    },
    {
        "id": "6747e248d34d0078",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb00",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb00,\n    quantity: 8 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 860,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "7679a025f3b6e2e8",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb08",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb08,\n    quantity: 10 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 940,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "2e89bd0afbf4c6f9",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb13",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb13,\n    quantity: 2 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1020,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "2ac682fbc785e223",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb15",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb15,\n    quantity: 2 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "87721bd8a9d637c2",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb17",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb17,\n    quantity: 4 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "9bef6632ec987174",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb1b",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb1b,\n    quantity: 5 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1260,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "ee90e564071fd2e2",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb20",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb20,\n    quantity: 5 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1380,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "f5c0d399501632d8",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xeb25",
        "func": "msg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xeb25,\n    quantity: 3 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "ced9c7e5247a4e43",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Serial Number",
        "info": "",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "803a5308d74701e4",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Device Model Name",
        "info": "",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "2843f7e1c009f008",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Firmware Version",
        "info": "",
        "x": 520,
        "y": 340,
        "wires": []
    },
    {
        "id": "0274cb9fcdc02cab",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Hardware version",
        "info": "",
        "x": 520,
        "y": 420,
        "wires": []
    },
    {
        "id": "a13b8a68b47f4149",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Modbus Device ID",
        "info": "",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "7434552b8ba34180",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Heartbeat",
        "info": "",
        "x": 500,
        "y": 580,
        "wires": []
    },
    {
        "id": "4c5d532c4164c6fb",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "NTN Module Status",
        "info": "",
        "x": 530,
        "y": 660,
        "wires": []
    },
    {
        "id": "4a176b1621f2c5be",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "PCIe 2 Module Status",
        "info": "",
        "x": 540,
        "y": 740,
        "wires": []
    },
    {
        "id": "e11c7ac4d61229ef",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "IMSI",
        "info": "",
        "x": 490,
        "y": 820,
        "wires": []
    },
    {
        "id": "e52225569c48ec5b",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "sw version",
        "info": "",
        "x": 500,
        "y": 900,
        "wires": []
    },
    {
        "id": "d6850045e9c9e7a6",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "SINR",
        "info": "",
        "x": 490,
        "y": 980,
        "wires": []
    },
    {
        "id": "f07105d3dd758943",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "RSRP",
        "info": "",
        "x": 490,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3b1bde7f18b32f3c",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "module time",
        "info": "",
        "x": 510,
        "y": 1140,
        "wires": []
    },
    {
        "id": "aeccc023d14acecf",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "GPS Latitude",
        "info": "",
        "x": 510,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c6f62ee2fd3081c5",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "GPS Longitude",
        "info": "",
        "x": 520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d3d5d842fbfe92cd",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "csq classifiction",
        "info": "",
        "x": 520,
        "y": 1420,
        "wires": []
    },
    {
        "id": "640ab8c41f1d46a3",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Module ready",
        "info": "",
        "x": 2530,
        "y": 200,
        "wires": []
    },
    {
        "id": "01174daab2835841",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Downlink setting status",
        "info": "",
        "x": 2560,
        "y": 280,
        "wires": []
    },
    {
        "id": "2fd6552e85c409e2",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "SIM status",
        "info": "",
        "x": 2520,
        "y": 360,
        "wires": []
    },
    {
        "id": "d418b4f20734c8c7",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "network registration status",
        "info": "",
        "x": 2570,
        "y": 440,
        "wires": []
    },
    {
        "id": "a46e020c0f0f2c02",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xec60",
        "func": "\nmsg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xec60,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1700,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "769da7af9775511c",
        "type": "inject",
        "z": "9c79856d0baec4d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1680,
        "wires": [
            [
                "710a0ec7d48cf8c3"
            ]
        ]
    },
    {
        "id": "9daabf4f139195da",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "get downlink data length",
        "info": "",
        "x": 750,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ddaf2fcfd695aa4b",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xec61",
        "func": "\nconst quantity = msg.payload;\nif (quantity > 0){\n    msg.payload = { \n        value: msg.payload,\n        fc: 4,\n        unitid: 1,\n        address: 0xec61,\n        quantity: quantity \n    };\n}else{\n    msg=null;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1820,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "9ee86fc1c05252c7",
        "type": "link in",
        "z": "9c79856d0baec4d4",
        "name": "link in 63",
        "links": [
            "af86c62ef3127b99"
        ],
        "x": 535,
        "y": 1800,
        "wires": [
            [
                "ddaf2fcfd695aa4b"
            ]
        ]
    },
    {
        "id": "ec72d68dd2cf3721",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "get downlink data",
        "info": "",
        "x": 720,
        "y": 1780,
        "wires": []
    },
    {
        "id": "132c4931574fbf5c",
        "type": "inject",
        "z": "9c79856d0baec4d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "b407316743281299"
            ]
        ]
    },
    {
        "id": "a63687cfb4b2e973",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xf060",
        "func": "    \nmsg.payload = { \n    value: msg.payload,\n    fc: 4,\n    unitid: 1,\n    address: 0xf060,\n    quantity: 1 \n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1940,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "c1c3e0ca59b0f358",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "get module reply data  length",
        "info": "",
        "x": 780,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e5b8d0e63a372d7d",
        "type": "link in",
        "z": "9c79856d0baec4d4",
        "name": "link in 64",
        "links": [
            "1e81e794408ab8e2"
        ],
        "x": 535,
        "y": 2000,
        "wires": [
            [
                "db5590e5aae98999"
            ]
        ]
    },
    {
        "id": "db5590e5aae98999",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "FC4 - Unit-ID 1 - Register 0xf061",
        "func": "const quantity = msg.payload;\nif (quantity > 0){\n    msg.payload = { \n        value: msg.payload,\n        fc: 4,\n        unitid: 1,\n        address: 0xf061,\n        quantity: quantity \n    };\n}else{\n    msg=null;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2040,
        "wires": [
            [
                "f1fcf1d7777f56f4"
            ]
        ]
    },
    {
        "id": "b1464548e8b2426b",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "get module reply data",
        "info": "",
        "x": 740,
        "y": 2000,
        "wires": []
    },
    {
        "id": "5782d2466a289135",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn downlink data length",
        "func": "const downlinkDataLength=msg.payload.data[0];\nmsg.payload=downlinkDataLength;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1000,
        "wires": [
            [
                "af86c62ef3127b99"
            ]
        ]
    },
    {
        "id": "0ba73ea1e6725ae7",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "satellite response",
        "func": "const version=msg.payload.buffer.toString();\nmsg.payload=version;\n\nconst checkItems = [\"+CRTDCP\", \"$GNRMC\",\"*MSQN\"];\n\nlet dataType=\"\";\nconst checkItemsLength = checkItems.length;\nfor (let i = 0; i < checkItemsLength;i++){\n    if(version.indexOf(checkItems[i])>-1){\n        dataType = checkItems[i];\n        break;\n    }\n}\nlet dataOut =[dataType,version];\nlet msg2={\n    \"payload\":dataOut\n}\n/*\nlet ntn_dongle = flow.get(\"ntn_dongle\");\nntn_dongle.state.push(\"5\");\nflow.set(\"ntn_dongle\", ntn_dongle);\n*/\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 1060,
        "wires": [
            [
                "42f8aadc4f9ac253"
            ],
            [
                "9f73cab315bb59d7",
                "e9f77a895271f8cf"
            ]
        ]
    },
    {
        "id": "af86c62ef3127b99",
        "type": "link out",
        "z": "9c79856d0baec4d4",
        "name": "link out DownlinkDataLength(0xec60)",
        "mode": "link",
        "links": [
            "9ee86fc1c05252c7"
        ],
        "x": 2165,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9f73cab315bb59d7",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 136",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1080,
        "wires": []
    },
    {
        "id": "42f8aadc4f9ac253",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 137",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1040,
        "wires": []
    },
    {
        "id": "66d3b351525fd7bf",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "ntn uplink response length",
        "func": "const uplinkResponseLength=msg.payload.data[0];\nmsg.payload = uplinkResponseLength;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1160,
        "wires": [
            [
                "1e81e794408ab8e2"
            ]
        ]
    },
    {
        "id": "1e81e794408ab8e2",
        "type": "link out",
        "z": "9c79856d0baec4d4",
        "name": "link out ModuleReplyDataLength(0xf060)",
        "mode": "link",
        "links": [
            "e5b8d0e63a372d7d"
        ],
        "x": 2255,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b59bf466d18f84dc",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "uplink response",
        "func": "const version=msg.payload.buffer.toString();\nmsg.payload=version;\n\nconst checkItems = [\"+CRTDCP\", \"$GNRMC\",\"*MSQN\",\"*MTUPD\"];\n\nlet dataType=\"\";\nconst checkItemsLength = checkItems.length;\nfor (let i = 0; i < checkItemsLength;i++){\n    if(version.indexOf(checkItems[i])>-1){\n        dataType = checkItems[i];\n        break;\n    }\n}\nlet dataOut =[dataType,version];\nlet msg2={\n    \"payload\":dataOut\n}\n/*\nlet ntn_dongle = flow.get(\"ntn_dongle\");\nntn_dongle.state.push(\"5\");\nflow.set(\"ntn_dongle\", ntn_dongle);\n*/\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1200,
        "wires": [
            [
                "bed30eeaca2d66e6"
            ],
            [
                "7af0c7b4ebd4fee9",
                "e9f77a895271f8cf"
            ]
        ]
    },
    {
        "id": "bed30eeaca2d66e6",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 138",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1280,
        "wires": []
    },
    {
        "id": "7af0c7b4ebd4fee9",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 139",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1320,
        "wires": []
    },
    {
        "id": "e9f77a895271f8cf",
        "type": "switch",
        "z": "9c79856d0baec4d4",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "+CRTDCP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "*MTUPD",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2590,
        "y": 1200,
        "wires": [
            [
                "afa5928835aa1fbf"
            ],
            [
                "6451c1569a16595d"
            ],
            []
        ]
    },
    {
        "id": "afa5928835aa1fbf",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "downlink data",
        "func": "\nconst din=msg.payload[1];\nconst index = din.indexOf(\":\");\nconst tmp = din.slice(index+1).split(\",\");\nconst d = tmp[2].replace(/[\"\\r\\n]/g, \"\");\nconst s = Buffer.from(d, 'hex').toString('utf8');\nlet receivedData={\n    \"length\":parseInt(tmp[1]),\n    \"data\":s\n}\nconsole.log(\"re=\",receivedData);\nmsg.payload=receivedData;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 1180,
        "wires": [
            [
                "1efa24c3cca1fba2",
                "eb9d3e79da30bc70"
            ]
        ]
    },
    {
        "id": "1efa24c3cca1fba2",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "get read data",
        "func": "const din=msg.payload;\nlet msg1={\"payload\":din.length};\nlet msg2={\"payload\":din.data};\nconst readData=JSON.parse(din.data);\n\nmsg.cloudSetting=readData.data;\n\nreturn [msg,msg1,msg2];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3030,
        "y": 1180,
        "wires": [
            [
                "abeb20b0d17fd40d"
            ],
            [
                "b87d38657f85bda6",
                "98fe2ec07d29757e"
            ],
            [
                "146f44e0aac628b3",
                "b2bac810fd508b1a"
            ]
        ]
    },
    {
        "id": "eb9d3e79da30bc70",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 140",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 1100,
        "wires": []
    },
    {
        "id": "abeb20b0d17fd40d",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 141",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3190,
        "y": 980,
        "wires": []
    },
    {
        "id": "6451c1569a16595d",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "uplink response data",
        "func": "\nconst din=msg.payload[1];\nconst index = din.indexOf(\":\");\nconst tmp = din.slice(index+1).split(\",\");\nconst d = tmp[2].replace(/[\"\\r\\n]/g, \"\");\nconst s = Buffer.from(d, 'hex').toString('utf8');\nlet receivedData={\n    \"length\":parseInt(tmp[1]),\n    \"data\":s\n}\nconsole.log(\"re=\",receivedData);\nmsg.payload=receivedData;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 1240,
        "wires": [
            [
                "7a45f62ead5ebe78",
                "2d83f5ac293d2904"
            ]
        ]
    },
    {
        "id": "7a45f62ead5ebe78",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "d": true,
        "name": "get read data",
        "func": "const din=msg.payload;\nconst readData=JSON.parse(din.data);\nmsg.cloudSetting=readData.data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 1300,
        "wires": [
            [
                "210ae027b14b9573"
            ]
        ]
    },
    {
        "id": "2d83f5ac293d2904",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 142",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2810,
        "y": 1320,
        "wires": []
    },
    {
        "id": "210ae027b14b9573",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 143",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3250,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f5426e4c451ae8b0",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "gps_payload",
        "func": "const gps = flow.get(\"gps\");\n\nmsg.payload={\"g\": [gps.latitude, gps.longitude]};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2320,
        "wires": [
            [
                "8fe5da3796faadb1"
            ]
        ]
    },
    {
        "id": "f80a0aa1317baf33",
        "type": "inject",
        "z": "9c79856d0baec4d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 2320,
        "wires": [
            [
                "f5426e4c451ae8b0"
            ]
        ]
    },
    {
        "id": "8fe5da3796faadb1",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "to uplink data",
        "func": "\nconst tmp=msg.payload;\nconst uplink=JSON.stringify(tmp);\nmsg.payload=uplink;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 2320,
        "wires": [
            [
                "c6d10ffb6512fda0"
            ]
        ]
    },
    {
        "id": "c6d10ffb6512fda0",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "String to Hex string",
        "func": "const din=msg.payload;\nlet tmp=Buffer.from(din,'utf-8').toString('hex');\n\nmsg.payload={\n    \"data\":tmp,\n    \"data_length\":din.length\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2380,
        "wires": [
            [
                "f66f7fd6c5f35d88",
                "97fc399488043f54"
            ]
        ]
    },
    {
        "id": "97fc399488043f54",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "cconvert to modbus cmd",
        "func": "let tmp=msg.payload.data+\"\\r\\n\";\nlet buf=Buffer.from(tmp);\nlet d_length=tmp.length;\nconsole.log(\"d_length=\",d_length);\nif ( (tmp.length%2)>0 ){\n    tmp=tmp.concat('\\0');\n    buf=Buffer.from(tmp);\n    console.log(\"buf=\",buf);\n    d_length +=1;\n}\n\nmsg.payload = { \n    value: buf,\n    fc: 16,\n    unitid: 1,\n    address: 0xc550,\n    quantity: d_length \n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 2380,
        "wires": [
            [
                "0b7e5a679d9c2d52",
                "74af9ded2b01a701"
            ]
        ]
    },
    {
        "id": "f66f7fd6c5f35d88",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 144",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 2320,
        "wires": []
    },
    {
        "id": "0b7e5a679d9c2d52",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 145",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b24875a487a79bc0",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "gps.latitude",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d8acf4f22f12564e",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "gps.longitude",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d06b3d6d938038ca",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 146",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2420,
        "wires": []
    },
    {
        "id": "4b9c84b595f7aba6",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "1ef202b7ac1b9f0b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 540,
        "y": 2440,
        "wires": [
            [
                "c6d10ffb6512fda0"
            ]
        ]
    },
    {
        "id": "aca6321738e8cb7b",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "<uplink> json format data",
        "info": "",
        "x": 530,
        "y": 2280,
        "wires": []
    },
    {
        "id": "73a4fb084f66543d",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "<uplink> TEXT format data",
        "info": "",
        "x": 530,
        "y": 2400,
        "wires": []
    },
    {
        "id": "0c4425ddf7bac93c",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "NTN Dongle Modbus ID",
        "tooltip": "",
        "group": "2f1fb0305c6ce650",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 290,
        "y": 2640,
        "wires": [
            [
                "2174f45e2dcb39af"
            ]
        ]
    },
    {
        "id": "2174f45e2dcb39af",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "modbus id to flow variable",
        "func": "let msg2={\"payload\":\"It's same modbus ID\"};\nconst mid=parseInt(msg.payload);\nlet unitid = flow.get(\"ntn_unitid\");\nif (unitid==undefined){\n    unitid=1;\n}\n\nif (unitid!=mid){\n    //flow.set(\"ntn_unitid\", mid);\n    msg.payload=mid;\n    msg.topic=\"updateMid\";\n    msg2=null;\n}else{\n    msg=null;\n}\n\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2640,
        "wires": [
            [
                "8b80a31c7ec0dd17"
            ],
            [
                "8e45c6cd09137027"
            ]
        ]
    },
    {
        "id": "8b80a31c7ec0dd17",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "change new modbus ID",
        "func": "let msg2={};\nlet tmp=context.get(\"updateData\");\nif (tmp==undefined){\n    tmp={};\n}\nswitch (msg.topic){\n    case \"updateMid\":\n        tmp.mid=msg.payload;\n        context.set(\"updateData\", tmp);\n        msg=null;\n        msg2=null;\n        break;\n    case \"imsi\":\n        tmp.imsi = msg.payload;\n        context.set(\"updateData\", tmp);\n        msg = null;\n        msg2 = null;\n        break;\n    case \"sn\":\n        tmp.sn = msg.payload;\n        context.set(\"updateData\", tmp);\n        msg = null;\n        msg2 = null;\n        break;\n    case \"change\":\n        if (tmp.mid){\n            let data;\n            if (tmp.imsi){\n                //data.push(0x02);\n                //data.push(tmp.mid);\n                const buf0 = Buffer.from([0x02,tmp.mid]);\n                const buf1 = Buffer.from(tmp.imsi);\n                const buf2 = Buffer.from('\\0');\n                //data=data.concat(Buffer.from(tmp.imsi).values());\n                if (((buf0.length+buf1.length)%2)>0){\n                    data = Buffer.concat([buf0,buf1,buf2]);\n                }else{\n                    data = Buffer.concat([buf0, buf1]);\n                }\n                const dLength=data.length;///2;\n                msg.payload = {\n                    value: data,//msg.payload,\n                    fc: 16,\n                    unitid: 0,\n                    address: 0xc830,//0,\n                    quantity: dLength\n                };\n                flow.set(\"ntn_unitid\", tmp.mid);\n\n                msg2.updateModbusID = tmp.mid;\n                context.set(\"updateData\", undefined);\n            }else if(tmp.sn){\n                const buf0 = Buffer.from([0x01, tmp.mid]);\n                const buf1 = Buffer.from(tmp.sn);\n                const buf2 = Buffer.from('\\0');\n                if (((buf0.length + buf1.length) % 2) > 0) {\n                    data = Buffer.concat([buf0, buf1, buf2]);\n                } else {\n                    data = Buffer.concat([buf0, buf1]);\n                }\n                const dLength = data.length;// / 2;\n                msg.payload = {\n                    value: data,//msg.payload,\n                    fc: 16,\n                    unitid: 0,\n                    address: 0xc830,//0,\n                    quantity: dLength\n                };\n                flow.set(\"ntn_unitid\", tmp.mid);\n                msg2.updateModbusID=tmp.mid;\n                \n                context.set(\"updateData\", undefined);\n            }else{\n                msg2.payload = \"Need IMSI or Serial Number information\";\n                msg = null;\n                msg2 = null;\n            }\n            \n        }else{\n            msg2.payload=\"What's new modbus ID?\";\n            msg=null;\n            msg2 = null;\n        }\n        //msg.payload=tmp;\n        break;\n\n}\n//context.set(\"updateData\",tmp);\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 2700,
        "wires": [
            [
                "74af9ded2b01a701"
            ],
            []
        ]
    },
    {
        "id": "8e45c6cd09137027",
        "type": "ui_toast",
        "z": "9c79856d0baec4d4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "b244c40a5d47c963",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "IMSI",
        "tooltip": "",
        "group": "2f1fb0305c6ce650",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 230,
        "y": 2760,
        "wires": [
            [
                "026e211fa1ed89ea"
            ]
        ]
    },
    {
        "id": "e0bbdc888eb299bc",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "d": true,
        "name": "",
        "label": "Serial Number",
        "tooltip": "",
        "group": "2f1fb0305c6ce650",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 260,
        "y": 2800,
        "wires": [
            [
                "0211e2e828cca005"
            ]
        ]
    },
    {
        "id": "026e211fa1ed89ea",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "target imsi",
        "func": "let msg2={\"payload\":\"It's same modbus ID\"};\nconst imsi=msg.payload;\n\nif (imsi.length<15){\n    msg2.payload=\"IMSI is too short\";\n    msg=null;\n} else if (imsi.length > 15) {\n    msg2.payload = \"IMSI is too many numbers\";\n    msg=null;\n}else{\n    msg.payload = imsi;\n    msg.topic = \"imsi\";\n    msg2=null;\n}\n\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2720,
        "wires": [
            [
                "8b80a31c7ec0dd17"
            ],
            [
                "8e45c6cd09137027"
            ]
        ]
    },
    {
        "id": "0211e2e828cca005",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "target serial number",
        "func": "let msg2={\"payload\":\"It's same modbus ID\"};\nconst sn=msg.payload;\n\nif (sn.length<12){\n    msg2.payload=\"Serial Number is too short\";\n    msg=null;\n} else if (sn.length > 12) {\n    msg2.payload = \"Serial Number is too many numbers\";\n    msg=null;\n}else{\n    msg.payload = sn;\n    msg.topic = \"sn\";\n    msg2=null;\n}\n\nreturn [msg,msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2800,
        "wires": [
            [
                "8b80a31c7ec0dd17"
            ],
            [
                "8e45c6cd09137027"
            ]
        ]
    },
    {
        "id": "fb7287e38470f099",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "",
        "group": "2f1fb0305c6ce650",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Change",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 620,
        "y": 2960,
        "wires": [
            [
                "f21e32076aa05151"
            ]
        ]
    },
    {
        "id": "f21e32076aa05151",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2900,
        "wires": [
            [
                "aaf83105bf1e3712"
            ]
        ]
    },
    {
        "id": "b407316743281299",
        "type": "switch",
        "z": "9c79856d0baec4d4",
        "name": "",
        "property": "pause",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 1920,
        "wires": [
            [],
            [
                "a63687cfb4b2e973"
            ]
        ]
    },
    {
        "id": "710a0ec7d48cf8c3",
        "type": "switch",
        "z": "9c79856d0baec4d4",
        "name": "",
        "property": "pause",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 1740,
        "wires": [
            [],
            [
                "a46e020c0f0f2c02"
            ]
        ]
    },
    {
        "id": "aaf83105bf1e3712",
        "type": "delay",
        "z": "9c79856d0baec4d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 2900,
        "wires": [
            [
                "8b80a31c7ec0dd17"
            ]
        ]
    },
    {
        "id": "a6eeddc95c5c54f4",
        "type": "switch",
        "z": "9c79856d0baec4d4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 2520,
        "wires": [
            [
                "f7a0411c4baef78d"
            ]
        ]
    },
    {
        "id": "f7a0411c4baef78d",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pause",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "146f44e0aac628b3",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "869cc10d4328188b",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Data",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b87d38657f85bda6",
        "type": "ui_text",
        "z": "9c79856d0baec4d4",
        "group": "869cc10d4328188b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Length",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 3270,
        "y": 1140,
        "wires": []
    },
    {
        "id": "98fe2ec07d29757e",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 147",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3290,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b2bac810fd508b1a",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 148",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3290,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3327bf509589a2c1",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "convert to modbus cmd",
        "func": "const mid = flow.get(\"mid\");\n\n//let tmp=msg.payload.data+\"\\r\\n\";\nlet tmp=msg.payload;\nlet buf=Buffer.from(tmp);\nlet d_length=tmp.length;\nconsole.log(\"d_length=\",d_length);\n/*\nif ( (tmp.length%2)>0 ){\n    tmp=tmp.concat('\\0');\n    buf=Buffer.from(tmp);\n    console.log(\"buf=\",buf);\n    d_length +=1;\n}\n*/\nmsg.payload = { \n    value: buf,\n    fc: 16,\n    unitid: mid,//1,\n    address: 0,\n    quantity: d_length \n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 3940,
        "wires": [
            [
                "bfde0a6df9bb1924"
            ]
        ]
    },
    {
        "id": "eeb402fccba76981",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "Current Password",
        "tooltip": "input password (8 characters) and enter",
        "group": "d423818bf2656bd2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 310,
        "y": 3900,
        "wires": [
            [
                "ee5312b5d41ca01c"
            ]
        ]
    },
    {
        "id": "ee5312b5d41ca01c",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "convert string to number array",
        "func": "\nlet msg_alert={};\nlet pincode=[];\n\nconst length=msg.payload.length;\n\n\n/* check input characters length, valid length: 8 bytes */\nif(length == 8){\n    for (let i=0; i<msg.payload.length; i++) {\n        let tmp = msg.payload.charCodeAt(i);\n\n        if((tmp>=0x30)&&(tmp<=0x39)){\n            tmp -=0x30;\n        }\n\n        pincode.push(tmp);\n    }\n    \n    msg.payload=pincode;\n\n    msg_alert=null;\n}else{\n    msg=null;\n    msg_alert={\n        payload:\"Error!! Password is too long or too short!\"\n    }\n}\n\nreturn [msg_alert,msg];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3900,
        "wires": [
            [
                "6bfb7962c8b85212"
            ],
            [
                "3327bf509589a2c1"
            ]
        ]
    },
    {
        "id": "6bfb7962c8b85212",
        "type": "ui_toast",
        "z": "9c79856d0baec4d4",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "bfde0a6df9bb1924",
        "type": "link out",
        "z": "9c79856d0baec4d4",
        "name": "toModbusWrite",
        "mode": "link",
        "links": [
            "52c42dc2e7c08b18"
        ],
        "x": 1285,
        "y": 3400,
        "wires": []
    },
    {
        "id": "52c42dc2e7c08b18",
        "type": "link in",
        "z": "9c79856d0baec4d4",
        "name": "link in 65",
        "links": [
            "bfde0a6df9bb1924"
        ],
        "x": 1275,
        "y": 2320,
        "wires": [
            [
                "74af9ded2b01a701"
            ]
        ]
    },
    {
        "id": "633a65c65f985f8d",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "Current PWD",
        "tooltip": "",
        "group": "d06a751678eaa23e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 310,
        "y": 3420,
        "wires": [
            [
                "e2d2d1e6e6fa1c16"
            ]
        ]
    },
    {
        "id": "e2d2d1e6e6fa1c16",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "current password to ascii format",
        "func": "let msg_alert={};\nlet pincode=[];\nconst length=msg.payload.length;\n\nif(length == 8){\n    for (let i=0; i<msg.payload.length; i++) {\n        let tmp = msg.payload.charCodeAt(i);\n\n        if((tmp>=0x30)&&(tmp<=0x39)){\n            tmp -=0x30;\n        }\n\n        pincode.push(tmp);\n    }\n\n    msg.payload=pincode;\n\n    msg_alert=null;\n} else {\n    msg = null;\n    msg_alert = {\n        payload: \"Error!! Password is too long or too short!\"\n    }\n}\n\nreturn [msg,msg_alert];\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 3420,
        "wires": [
            [
                "e1433c36b974874e",
                "03ba34437690741a"
            ],
            [
                "31288dd867991fd6"
            ]
        ]
    },
    {
        "id": "e1433c36b974874e",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 150",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3340,
        "wires": []
    },
    {
        "id": "03ba34437690741a",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "currentPINCode",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "d3da729f891252ce",
        "type": "ui_text_input",
        "z": "9c79856d0baec4d4",
        "name": "",
        "label": "New PWD",
        "tooltip": "",
        "group": "d06a751678eaa23e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 310,
        "y": 3580,
        "wires": [
            [
                "381b154f7990f203"
            ]
        ]
    },
    {
        "id": "381b154f7990f203",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "new password to ascii format",
        "func": "\nlet msg_alert={};\nlet pincode=[];\n\nconst length=msg.payload.length;\n\n\nif (length == 8) {\n    for (let i = 0; i < msg.payload.length; i++) {\n        let tmp = msg.payload.charCodeAt(i);\n\n        if ((tmp >= 0x30) && (tmp <= 0x39)) {\n            tmp -= 0x30;\n        }\n\n        pincode.push(tmp);\n    }\n\n    msg.payload = pincode;\n\n    msg_alert = null;\n} else {\n    msg = null;\n    msg_alert = {\n        payload: \"Error!! Password is too long or too short!\"\n    }\n}\n\nreturn [msg, msg_alert];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 3580,
        "wires": [
            [
                "cbc4da1a3a57cdf6",
                "44f6b956e8194817"
            ],
            [
                "31288dd867991fd6"
            ]
        ]
    },
    {
        "id": "cbc4da1a3a57cdf6",
        "type": "change",
        "z": "9c79856d0baec4d4",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "newPINCode",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "44f6b956e8194817",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 151",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3540,
        "wires": []
    },
    {
        "id": "846f06a5c1484f69",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "",
        "group": "d06a751678eaa23e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Change Password",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 3260,
        "wires": [
            [
                "8f22f92973dac614"
            ]
        ]
    },
    {
        "id": "8f22f92973dac614",
        "type": "function",
        "z": "9c79856d0baec4d4",
        "name": "convert to modbus cmd",
        "func": "\n//let tmp=msg.payload.data+\"\\r\\n\";\nlet cPIN = flow.get(\"currentPINCode\");\nlet nPIN = flow.get(\"newPINCode\");\nlet tmp=cPIN.concat(nPIN);\nlet buf=Buffer.from(tmp);\n//console.log(\"cPIN=\",cPIN);\n//console.log(\"nPIN=\", nPIN);\nlet d_length=tmp.length;\n//msg.payload=tmp;\n//console.log(\"d_length=\",d_length);\n\nif ( (tmp.length%2)>0 ){\n    tmp=tmp.concat('\\0');\n    buf=Buffer.from(tmp);\n    console.log(\"buf=\",buf);\n    d_length +=1;\n}\n\n\nmsg.payload = { \n    value: buf,\n    fc: 16,\n    unitid: 1,\n    address: 4,\n    quantity: d_length \n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 3260,
        "wires": [
            [
                "fc3f1da0c453c73b",
                "bfde0a6df9bb1924"
            ]
        ]
    },
    {
        "id": "fc3f1da0c453c73b",
        "type": "debug",
        "z": "9c79856d0baec4d4",
        "name": "debug 152",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3220,
        "wires": []
    },
    {
        "id": "31288dd867991fd6",
        "type": "ui_toast",
        "z": "9c79856d0baec4d4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "62c6daf0e8fa9bb3",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "d": true,
        "name": "getSN",
        "group": "c02fb88ea1f059dc",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "de97485adf87d28b"
            ]
        ]
    },
    {
        "id": "cf21f00ccb1ade22",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getMN",
        "group": "c02fb88ea1f059dc",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 300,
        "wires": [
            [
                "9c6b24b900958763"
            ]
        ]
    },
    {
        "id": "3972d0019a353996",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getFWV",
        "group": "c02fb88ea1f059dc",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 380,
        "wires": [
            [
                "a4933a7de5f4f66d"
            ]
        ]
    },
    {
        "id": "92c77e2ce820f59b",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getHWV",
        "group": "c02fb88ea1f059dc",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 460,
        "wires": [
            [
                "cd4282d69c04496d"
            ]
        ]
    },
    {
        "id": "e7f3bd006ba5c1f8",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getMID",
        "group": "c02fb88ea1f059dc",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 540,
        "wires": [
            [
                "afc7c6eaca5fc541"
            ]
        ]
    },
    {
        "id": "8494b44c13332ce7",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getHB",
        "group": "c02fb88ea1f059dc",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "7509570370f687c9"
            ]
        ]
    },
    {
        "id": "3cbb2abee0a56d53",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getMS",
        "group": "c02fb88ea1f059dc",
        "order": 13,
        "width": 2,
        "height": 4,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "4004ca86397691fb"
            ]
        ]
    },
    {
        "id": "b77fcb78e9577410",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getP2S",
        "group": "c02fb88ea1f059dc",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 780,
        "wires": [
            [
                "0dee7bd3fc85efe2"
            ]
        ]
    },
    {
        "id": "91b91c2e7486f822",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getIMSI",
        "group": "05a6cc0c1856e3f4",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 860,
        "wires": [
            [
                "6747e248d34d0078"
            ]
        ]
    },
    {
        "id": "149950461bbb15b5",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getSWV",
        "group": "05a6cc0c1856e3f4",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 940,
        "wires": [
            [
                "7679a025f3b6e2e8"
            ]
        ]
    },
    {
        "id": "02974b339b725ae0",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getSINR",
        "group": "05a6cc0c1856e3f4",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "2e89bd0afbf4c6f9"
            ]
        ]
    },
    {
        "id": "c32f0a74bed33987",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getRSRP",
        "group": "05a6cc0c1856e3f4",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "2ac682fbc785e223"
            ]
        ]
    },
    {
        "id": "1582a8860d737fce",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getMT",
        "group": "05a6cc0c1856e3f4",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "87721bd8a9d637c2"
            ]
        ]
    },
    {
        "id": "16e11a389800eec7",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getGPSLat",
        "group": "05a6cc0c1856e3f4",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "9bef6632ec987174"
            ]
        ]
    },
    {
        "id": "b9eeb3b037d083c5",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getGPSLong",
        "group": "05a6cc0c1856e3f4",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 1380,
        "wires": [
            [
                "ee90e564071fd2e2"
            ]
        ]
    },
    {
        "id": "614882875e701821",
        "type": "ui_button",
        "z": "9c79856d0baec4d4",
        "name": "getCSQc",
        "group": "05a6cc0c1856e3f4",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "GET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "f5c0d399501632d8"
            ]
        ]
    },
    {
        "id": "ec312762951c591f",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Feature:　Change Modbus ID",
        "info": "",
        "x": 360,
        "y": 2580,
        "wires": []
    },
    {
        "id": "079826baf57e8d0d",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "Feature:　Change password",
        "info": "",
        "x": 440,
        "y": 3180,
        "wires": []
    },
    {
        "id": "b0619c15e2b9b59d",
        "type": "comment",
        "z": "9c79856d0baec4d4",
        "name": "input password",
        "info": "The user must enter a password at every power-on before normal operation.",
        "x": 380,
        "y": 3820,
        "wires": []
    }
]